//
//  MessagesViewController.swift
//  MessagesExtension
//
//  Created by Developer on 1/23/17.
//  Copyright Â© 2017 JwitApps. All rights reserved.
//

import UIKit
import Messages

import iMessageTools

class MainBackgroundView: UIView {
    override func draw(_ rect: CGRect) {
        DesignsStyleKit.drawMainScreenBackground(frame: rect, resizing: .stretch)
    }
}

class InsertImageBackgroundView: UIView {
    override func draw(_ rect: CGRect) {
        DesignsStyleKit.drawInsertImageBackground(frame: rect, resizing: .stretch)
    }
}

class MessagesViewController: MSMessagesAppViewController {
    
    var stretchController: StretchViewController?
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
    }
    
    // MARK: - Conversation Handling
    
    override func willBecomeActive(with conversation: MSConversation) {
        
    }
    
    override func didResignActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the active to inactive state.
        // This will happen when the user dissmises the extension, changes to a different
        // conversation or quits Messages.
        
        // Use this method to release shared resources, save user data, invalidate timers,
        // and store enough state information to restore your extension to its current state
        // in case it is terminated later.
    }
   
    override func didReceive(_ message: MSMessage, conversation: MSConversation) {
        // Called when a message arrives that was generated by another instance of this
        // extension on a remote device.
        
        // Use this method to trigger UI updates in response to the message.
    }
    
    override func didStartSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user taps the send button.
    }
    
    override func didCancelSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user deletes the message without sending it.
    
        // Use this to clean up state related to the deleted message.
    }
    
    override func willTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called before the extension transitions to a new presentation style.
    
        // Use this method to prepare for the change in presentation style.
    }
    
    override func didTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called after the extension transitions to a new presentation style.
    
        // Use this method to finalize any behaviors associated with the change in presentation style.
    }
    
    @IBAction func startPressed(sender: Any) {
        let controller = storyboard!.instantiateViewController(withIdentifier: "StretchViewController") as! StretchViewController
        stretchController = controller
        controller.messageSender = self
        controller.orientationManager = self
        present(controller)
        
        requestPresentationStyle(.expanded)
    }
    
    func dismissStretchController() {
        if let controller = stretchController {
            throwAway(controller: controller)
        }
        stretchController = nil
    }
}
